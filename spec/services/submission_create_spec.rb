require 'rails_helper'

RSpec.describe SubmissionCreate do
  describe '#line_to_diffs' do
    let(:actual) { double('actual_encoding_code') }
    let(:expect_encoding_code) { double('expect_encoding_code') }
    let(:diffs) { SubmissionCreate::Diffs.generate(actual, expect_encoding_code) }

    subject { SubmissionCreate::DiffsToLineDiffs2.new(diffs, actual, expect_encoding_code).search_lines }

    before do
      allow(actual).to receive(:charlist) { actual_charlist }
      allow(actual).to receive(:encode) { actual_encode }
      allow(expect_encoding_code).to receive(:charlist) { expect_charlist }
      allow(expect_encoding_code).to receive(:encode) { expect_encode }
    end

    context '下側' do
      let(:actual_encode) { 'TY Jm ( BE FR ) ; BE di ( Su ) { BE Fk , QR ; TY Dt ; or ( An , & QR ) ; Dt = Jm ( QR ) ; Fs ( fi , QR , Dt ) ; } TY Jm ( BE km ) { Np ( km == 0 ) { hs 1 ; } be { hs km * Jm ( km - 1 ) ; } } ' }
      let(:actual_charlist) { [[3,"T"],[3,"Y"],[3," "],[3,"J"],[3,"m"],[3," "],[3,"("],[3," "],[3,"B"],[3,"E"],[3," "],[3,"F"],[3,"R"],[3," "],[3,")"],[3," "],[3,";"],[3," "],[5,"B"],[5,"E"],[5," "],[5,"d"],[5,"i"],[5," "],[5,"("],[5," "],[5,"S"],[5,"u"],[5," "],[5,")"],[5," "],[5,"{"],[5," "],[6,"B"],[6,"E"],[6," "],[6,"F"],[6,"k"],[6," "],[6,","],[6," "],[6,"Q"],[6,"R"],[6," "],[6,";"],[6," "],[7,"T"],[7,"Y"],[7," "],[7,"D"],[7,"t"],[7," "],[7,";"],[7," "],[9,"o"],[9,"r"],[9," "],[9,"("],[9," "],[9,"A"],[9,"n"],[9," "],[9,","],[9," "],[9,"\u0026"],[9," "],[9,"Q"],[9,"R"],[9," "],[9,")"],[9," "],[9,";"],[9," "],[10,"D"],[10,"t"],[10," "],[10,"="],[10," "],[10,"J"],[10,"m"],[10," "],[10,"("],[10," "],[10,"Q"],[10,"R"],[10," "],[10,")"],[10," "],[10,";"],[10," "],[11,"F"],[11,"s"],[11," "],[11,"("],[11," "],[11,"f"],[11,"i"],[11," "],[11,","],[11," "],[11,"Q"],[11,"R"],[11," "],[11,","],[11," "],[11,"D"],[11,"t"],[11," "],[11,")"],[11," "],[11,";"],[11," "],[12,"}"],[12," "],[14,"T"],[14,"Y"],[14," "],[14,"J"],[14,"m"],[14," "],[14,"("],[14," "],[14,"B"],[14,"E"],[14," "],[14,"k"],[14,"m"],[14," "],[14,")"],[14," "],[14,"{"],[14," "],[15,"N"],[15,"p"],[15," "],[15,"("],[15," "],[15,"k"],[15,"m"],[15," "],[15,"="],[15,"="],[15," "],[15,"0"],[15," "],[15,")"],[15," "],[15,"{"],[15," "],[16,"h"],[16,"s"],[16," "],[16,"1"],[16," "],[16,";"],[16," "],[17,"}"],[17," "],[18,"b"],[18,"e"],[18," "],[18,"{"],[18," "],[19,"h"],[19,"s"],[19," "],[19,"k"],[19,"m"],[19," "],[19,"*"],[19," "],[19,"J"],[19,"m"],[19," "],[19,"("],[19," "],[19,"k"],[19,"m"],[19," "],[19,"-"],[19," "],[19,"1"],[19," "],[19,")"],[19," "],[19,";"],[19," "],[20,"}"],[20," "],[21,"}"],[21," "]] }
      let(:expect_encode) { 'TY Jm ( BE FR ) ; BE di ( Su ) { BE Fk , QR ; TY Dt ; or ( An , & QR ) ; Dt = Jm ( QR ) ; Fs ( fi , QR , Dt ) ; hs ( 0 ) ; } TY Jm ( BE km ) { Np ( km <= 1 ) hs 1 ; be hs km * Jm ( km - 1 ) ; } ' }
      let(:expect_charlist) { [[2,"T"],[2,"Y"],[2," "],[2,"J"],[2,"m"],[2," "],[2,"("],[2," "],[2,"B"],[2,"E"],[2," "],[2,"F"],[2,"R"],[2," "],[2,")"],[2," "],[2,";"],[2," "],[3,"B"],[3,"E"],[3," "],[3,"d"],[3,"i"],[3," "],[3,"("],[3," "],[3,"S"],[3,"u"],[3," "],[3,")"],[3," "],[3,"{"],[3," "],[4,"B"],[4,"E"],[4," "],[4,"F"],[4,"k"],[4," "],[4,","],[4," "],[4,"Q"],[4,"R"],[4," "],[4,";"],[4," "],[5,"T"],[5,"Y"],[5," "],[5,"D"],[5,"t"],[5," "],[5,";"],[5," "],[6,"o"],[6,"r"],[6," "],[6,"("],[6," "],[6,"A"],[6,"n"],[6," "],[6,","],[6," "],[6,"\u0026"],[6," "],[6,"Q"],[6,"R"],[6," "],[6,")"],[6," "],[6,";"],[6," "],[7,"D"],[7,"t"],[7," "],[7,"="],[7," "],[7,"J"],[7,"m"],[7," "],[7,"("],[7," "],[7,"Q"],[7,"R"],[7," "],[7,")"],[7," "],[7,";"],[7," "],[8,"F"],[8,"s"],[8," "],[8,"("],[8," "],[8,"f"],[8,"i"],[8," "],[8,","],[8," "],[8,"Q"],[8,"R"],[8," "],[8,","],[8," "],[8,"D"],[8,"t"],[8," "],[8,")"],[8," "],[8,";"],[8," "],[9,"h"],[9,"s"],[9," "],[9,"("],[9," "],[9,"0"],[9," "],[9,")"],[9," "],[9,";"],[9," "],[10,"}"],[10," "],[11,"T"],[11,"Y"],[11," "],[11,"J"],[11,"m"],[11," "],[11,"("],[11," "],[11,"B"],[11,"E"],[11," "],[11,"k"],[11,"m"],[11," "],[11,")"],[11," "],[11,"{"],[11," "],[12,"N"],[12,"p"],[12," "],[12,"("],[12," "],[12,"k"],[12,"m"],[12," "],[12,"\u003c"],[12,"="],[12," "],[12,"1"],[12," "],[12,")"],[12," "],[12,"h"],[12,"s"],[12," "],[12,"1"],[12," "],[12,";"],[12," "],[13,"b"],[13,"e"],[13," "],[13,"h"],[13,"s"],[13," "],[13,"k"],[13,"m"],[13," "],[13,"*"],[13," "],[13,"J"],[13,"m"],[13," "],[13,"("],[13," "],[13,"k"],[13,"m"],[13," "],[13,"-"],[13," "],[13,"1"],[13," "],[13,")"],[13," "],[13,";"],[13," "],[14,"}"],[14," "]] }

      it {
        expect(subject).to match_array([{number: 12, deleted_line: true},  { number: 15}])
      }
    end

    context '上側' do
      let(:actual_encode) { 'BE Jm ( BE Fk ) ; BE di ( Su ) { BE Dt , QR ; TY km = 1 , FR ; or ( An , & QR ) ; Gh ( Dt = 2 ; Dt <= QR ; Dt ++ ) { km *= Dt ; } FR = km ; Fs ( fi , QR , FR ) ; } ' }
      let(:actual_charlist) { [[3,"B"],[3,"E"],[3," "],[3,"J"],[3,"m"],[3," "],[3,"("],[3," "],[3,"B"],[3,"E"],[3," "],[3,"F"],[3,"k"],[3," "],[3,")"],[3," "],[3,";"],[3," "],[5,"B"],[5,"E"],[5," "],[5,"d"],[5,"i"],[5," "],[5,"("],[5," "],[5,"S"],[5,"u"],[5," "],[5,")"],[5," "],[5,"{"],[5," "],[7,"B"],[7,"E"],[7," "],[7,"D"],[7,"t"],[7," "],[7,","],[7," "],[7,"Q"],[7,"R"],[7," "],[7,";"],[7," "],[8,"T"],[8,"Y"],[8," "],[8,"k"],[8,"m"],[8," "],[8,"="],[8," "],[8,"1"],[8," "],[8,","],[8," "],[8,"F"],[8,"R"],[8," "],[8,";"],[8," "],[10,"o"],[10,"r"],[10," "],[10,"("],[10," "],[10,"A"],[10,"n"],[10," "],[10,","],[10," "],[10,"\u0026"],[10," "],[10,"Q"],[10,"R"],[10," "],[10,")"],[10," "],[10,";"],[10," "],[11,"G"],[11,"h"],[11," "],[11,"("],[11," "],[11,"D"],[11,"t"],[11," "],[11,"="],[11," "],[11,"2"],[11," "],[11,";"],[11," "],[11,"D"],[11,"t"],[11," "],[11,"\u003c"],[11,"="],[11," "],[11,"Q"],[11,"R"],[11," "],[11,";"],[11," "],[11,"D"],[11,"t"],[11," "],[11,"+"],[11,"+"],[11," "],[11,")"],[11," "],[11,"{"],[11," "],[12,"k"],[12,"m"],[12," "],[12,"*"],[12,"="],[12," "],[12,"D"],[12,"t"],[12," "],[12,";"],[12," "],[13,"}"],[13," "],[14,"F"],[14,"R"],[14," "],[14,"="],[14," "],[14,"k"],[14,"m"],[14," "],[14,";"],[14," "],[15,"F"],[15,"s"],[15," "],[15,"("],[15," "],[15,"f"],[15,"i"],[15," "],[15,","],[15," "],[15,"Q"],[15,"R"],[15," "],[15,","],[15," "],[15,"F"],[15,"R"],[15," "],[15,")"],[15," "],[15,";"],[15," "],[16,"}"],[16," "]] }
      let(:expect_encode) { 'BE di ( Su ) { Jm ( ) ; BE di ( Su ) ; } BE Jm ( ) { BE Dt , QR ; TY km = 1 , FR ; or ( An , & QR ) ; Gh ( Dt = 2 ; Dt <= QR ; Dt ++ ) { km *= Dt ; } Fs ( mq , QR , km ) ; hs ( 0 ) ; } ' }
      let(:expect_charlist) {  [[2,"B"],[2,"E"],[2," "],[2,"d"],[2,"i"],[2," "],[2,"("],[2," "],[2,"S"],[2,"u"],[2," "],[2,")"],[2," "],[3,"{"],[3," "],[4,"J"],[4,"m"],[4," "],[4,"("],[4," "],[4,")"],[4," "],[4,";"],[4," "],[5,"B"],[5,"E"],[5," "],[5,"d"],[5,"i"],[5," "],[5,"("],[5," "],[5,"S"],[5,"u"],[5," "],[5,")"],[5," "],[5,";"],[5," "],[6,"}"],[6," "],[7,"B"],[7,"E"],[7," "],[7,"J"],[7,"m"],[7," "],[7,"("],[7," "],[7,")"],[7," "],[8,"{"],[8," "],[9,"B"],[9,"E"],[9," "],[9,"D"],[9,"t"],[9," "],[9,","],[9," "],[9,"Q"],[9,"R"],[9," "],[9,";"],[9," "],[10,"T"],[10,"Y"],[10," "],[10,"k"],[10,"m"],[10," "],[10,"="],[10," "],[10,"1"],[10," "],[10,","],[10," "],[10,"F"],[10,"R"],[10," "],[10,";"],[10," "],[11,"o"],[11,"r"],[11," "],[11,"("],[11," "],[11,"A"],[11,"n"],[11," "],[11,","],[11," "],[11,"\u0026"],[11," "],[11,"Q"],[11,"R"],[11," "],[11,")"],[11," "],[11,";"],[11," "],[12,"G"],[12,"h"],[12," "],[12,"("],[12," "],[12,"D"],[12,"t"],[12," "],[12,"="],[12," "],[12,"2"],[12," "],[12,";"],[12," "],[12,"D"],[12,"t"],[12," "],[12,"\u003c"],[12,"="],[12," "],[12,"Q"],[12,"R"],[12," "],[12,";"],[12," "],[12,"D"],[12,"t"],[12," "],[12,"+"],[12,"+"],[12," "],[12,")"],[12," "],[12,"{"],[12," "],[13,"k"],[13,"m"],[13," "],[13,"*"],[13,"="],[13," "],[13,"D"],[13,"t"],[13," "],[13,";"],[13," "],[14,"}"],[14," "],[15,"F"],[15,"s"],[15," "],[15,"("],[15," "],[15,"m"],[15,"q"],[15," "],[15,","],[15," "],[15,"Q"],[15,"R"],[15," "],[15,","],[15," "],[15,"k"],[15,"m"],[15," "],[15,")"],[15," "],[15,";"],[15," "],[16,"h"],[16,"s"],[16," "],[16,"("],[16," "],[16,"0"],[16," "],[16,")"],[16," "],[16,";"],[16," "],[17,"}"],[17," "]] }


      it {
        expect(subject).to match_array([ {number: 3}, {number: 5}, {number: 14}, {number: 15}, {number: 16, deleted_line: true}])
      }
    end
  end
end
